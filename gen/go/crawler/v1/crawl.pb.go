// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: crawler/v1/crawl.proto

package crawlerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type URLCurrentCrawls_URLCurrentStatus int32

const (
	URLCurrentCrawls_URL_CURRENT_STATUS_UNSPECIFIED URLCurrentCrawls_URLCurrentStatus = 0
	URLCurrentCrawls_URL_CURRENT_STATUS_NO_RECORD   URLCurrentCrawls_URLCurrentStatus = 1
	URLCurrentCrawls_URL_CURRENT_STATUS_PENDING     URLCurrentCrawls_URLCurrentStatus = 2 // In List waiting for Start Que
	URLCurrentCrawls_URL_CURRENT_STATUS_START       URLCurrentCrawls_URLCurrentStatus = 3 // Tagged for Crawling
	URLCurrentCrawls_URL_CURRENT_STATUS_IN_PROGRESS URLCurrentCrawls_URLCurrentStatus = 4
	URLCurrentCrawls_URL_CURRENT_STATUS_FINISHED    URLCurrentCrawls_URLCurrentStatus = 5
	URLCurrentCrawls_URL_CURRENT_STATUS_CANCELED    URLCurrentCrawls_URLCurrentStatus = 6
)

// Enum value maps for URLCurrentCrawls_URLCurrentStatus.
var (
	URLCurrentCrawls_URLCurrentStatus_name = map[int32]string{
		0: "URL_CURRENT_STATUS_UNSPECIFIED",
		1: "URL_CURRENT_STATUS_NO_RECORD",
		2: "URL_CURRENT_STATUS_PENDING",
		3: "URL_CURRENT_STATUS_START",
		4: "URL_CURRENT_STATUS_IN_PROGRESS",
		5: "URL_CURRENT_STATUS_FINISHED",
		6: "URL_CURRENT_STATUS_CANCELED",
	}
	URLCurrentCrawls_URLCurrentStatus_value = map[string]int32{
		"URL_CURRENT_STATUS_UNSPECIFIED": 0,
		"URL_CURRENT_STATUS_NO_RECORD":   1,
		"URL_CURRENT_STATUS_PENDING":     2,
		"URL_CURRENT_STATUS_START":       3,
		"URL_CURRENT_STATUS_IN_PROGRESS": 4,
		"URL_CURRENT_STATUS_FINISHED":    5,
		"URL_CURRENT_STATUS_CANCELED":    6,
	}
)

func (x URLCurrentCrawls_URLCurrentStatus) Enum() *URLCurrentCrawls_URLCurrentStatus {
	p := new(URLCurrentCrawls_URLCurrentStatus)
	*p = x
	return p
}

func (x URLCurrentCrawls_URLCurrentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URLCurrentCrawls_URLCurrentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_v1_crawl_proto_enumTypes[0].Descriptor()
}

func (URLCurrentCrawls_URLCurrentStatus) Type() protoreflect.EnumType {
	return &file_crawler_v1_crawl_proto_enumTypes[0]
}

func (x URLCurrentCrawls_URLCurrentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URLCurrentCrawls_URLCurrentStatus.Descriptor instead.
func (URLCurrentCrawls_URLCurrentStatus) EnumDescriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{10, 0}
}

type URLLongListCurrentCrawls_URLCurrentStatus int32

const (
	URLLongListCurrentCrawls_URL_CURRENT_STATUS_UNSPECIFIED URLLongListCurrentCrawls_URLCurrentStatus = 0
	URLLongListCurrentCrawls_URL_CURRENT_STATUS_NO_RECORD   URLLongListCurrentCrawls_URLCurrentStatus = 1
	URLLongListCurrentCrawls_URL_CURRENT_STATUS_PENDING     URLLongListCurrentCrawls_URLCurrentStatus = 2 // In List waiting for Start Que
	URLLongListCurrentCrawls_URL_CURRENT_STATUS_START       URLLongListCurrentCrawls_URLCurrentStatus = 3 // Tagged for Crawling
	URLLongListCurrentCrawls_URL_CURRENT_STATUS_IN_PROGRESS URLLongListCurrentCrawls_URLCurrentStatus = 4
	URLLongListCurrentCrawls_URL_CURRENT_STATUS_FINISHED    URLLongListCurrentCrawls_URLCurrentStatus = 5
	URLLongListCurrentCrawls_URL_CURRENT_STATUS_CANCELED    URLLongListCurrentCrawls_URLCurrentStatus = 6
)

// Enum value maps for URLLongListCurrentCrawls_URLCurrentStatus.
var (
	URLLongListCurrentCrawls_URLCurrentStatus_name = map[int32]string{
		0: "URL_CURRENT_STATUS_UNSPECIFIED",
		1: "URL_CURRENT_STATUS_NO_RECORD",
		2: "URL_CURRENT_STATUS_PENDING",
		3: "URL_CURRENT_STATUS_START",
		4: "URL_CURRENT_STATUS_IN_PROGRESS",
		5: "URL_CURRENT_STATUS_FINISHED",
		6: "URL_CURRENT_STATUS_CANCELED",
	}
	URLLongListCurrentCrawls_URLCurrentStatus_value = map[string]int32{
		"URL_CURRENT_STATUS_UNSPECIFIED": 0,
		"URL_CURRENT_STATUS_NO_RECORD":   1,
		"URL_CURRENT_STATUS_PENDING":     2,
		"URL_CURRENT_STATUS_START":       3,
		"URL_CURRENT_STATUS_IN_PROGRESS": 4,
		"URL_CURRENT_STATUS_FINISHED":    5,
		"URL_CURRENT_STATUS_CANCELED":    6,
	}
)

func (x URLLongListCurrentCrawls_URLCurrentStatus) Enum() *URLLongListCurrentCrawls_URLCurrentStatus {
	p := new(URLLongListCurrentCrawls_URLCurrentStatus)
	*p = x
	return p
}

func (x URLLongListCurrentCrawls_URLCurrentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URLLongListCurrentCrawls_URLCurrentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_v1_crawl_proto_enumTypes[1].Descriptor()
}

func (URLLongListCurrentCrawls_URLCurrentStatus) Type() protoreflect.EnumType {
	return &file_crawler_v1_crawl_proto_enumTypes[1]
}

func (x URLLongListCurrentCrawls_URLCurrentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URLLongListCurrentCrawls_URLCurrentStatus.Descriptor instead.
func (URLLongListCurrentCrawls_URLCurrentStatus) EnumDescriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{13, 0}
}

type URLMonitorCrawls_URLCurrentStatus int32

const (
	URLMonitorCrawls_URL_CURRENT_STATUS_UNSPECIFIED URLMonitorCrawls_URLCurrentStatus = 0
	URLMonitorCrawls_URL_CURRENT_STATUS_NO_RECORD   URLMonitorCrawls_URLCurrentStatus = 1
	URLMonitorCrawls_URL_CURRENT_STATUS_PENDING     URLMonitorCrawls_URLCurrentStatus = 2 // In List waiting for Start Que
	URLMonitorCrawls_URL_CURRENT_STATUS_START       URLMonitorCrawls_URLCurrentStatus = 3 // Tagged for Crawling
	URLMonitorCrawls_URL_CURRENT_STATUS_IN_PROGRESS URLMonitorCrawls_URLCurrentStatus = 4
	URLMonitorCrawls_URL_CURRENT_STATUS_FINISHED    URLMonitorCrawls_URLCurrentStatus = 5
	URLMonitorCrawls_URL_CURRENT_STATUS_CANCELED    URLMonitorCrawls_URLCurrentStatus = 6
)

// Enum value maps for URLMonitorCrawls_URLCurrentStatus.
var (
	URLMonitorCrawls_URLCurrentStatus_name = map[int32]string{
		0: "URL_CURRENT_STATUS_UNSPECIFIED",
		1: "URL_CURRENT_STATUS_NO_RECORD",
		2: "URL_CURRENT_STATUS_PENDING",
		3: "URL_CURRENT_STATUS_START",
		4: "URL_CURRENT_STATUS_IN_PROGRESS",
		5: "URL_CURRENT_STATUS_FINISHED",
		6: "URL_CURRENT_STATUS_CANCELED",
	}
	URLMonitorCrawls_URLCurrentStatus_value = map[string]int32{
		"URL_CURRENT_STATUS_UNSPECIFIED": 0,
		"URL_CURRENT_STATUS_NO_RECORD":   1,
		"URL_CURRENT_STATUS_PENDING":     2,
		"URL_CURRENT_STATUS_START":       3,
		"URL_CURRENT_STATUS_IN_PROGRESS": 4,
		"URL_CURRENT_STATUS_FINISHED":    5,
		"URL_CURRENT_STATUS_CANCELED":    6,
	}
)

func (x URLMonitorCrawls_URLCurrentStatus) Enum() *URLMonitorCrawls_URLCurrentStatus {
	p := new(URLMonitorCrawls_URLCurrentStatus)
	*p = x
	return p
}

func (x URLMonitorCrawls_URLCurrentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URLMonitorCrawls_URLCurrentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_v1_crawl_proto_enumTypes[2].Descriptor()
}

func (URLMonitorCrawls_URLCurrentStatus) Type() protoreflect.EnumType {
	return &file_crawler_v1_crawl_proto_enumTypes[2]
}

func (x URLMonitorCrawls_URLCurrentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URLMonitorCrawls_URLCurrentStatus.Descriptor instead.
func (URLMonitorCrawls_URLCurrentStatus) EnumDescriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{16, 0}
}

type URLMonitor01Crawls_URLCurrentStatus int32

const (
	URLMonitor01Crawls_URL_CURRENT_STATUS_UNSPECIFIED URLMonitor01Crawls_URLCurrentStatus = 0
	URLMonitor01Crawls_URL_CURRENT_STATUS_NO_RECORD   URLMonitor01Crawls_URLCurrentStatus = 1
	URLMonitor01Crawls_URL_CURRENT_STATUS_PENDING     URLMonitor01Crawls_URLCurrentStatus = 2 // In List waiting for Start Que
	URLMonitor01Crawls_URL_CURRENT_STATUS_START       URLMonitor01Crawls_URLCurrentStatus = 3 // Tagged for Crawling
	URLMonitor01Crawls_URL_CURRENT_STATUS_IN_PROGRESS URLMonitor01Crawls_URLCurrentStatus = 4
	URLMonitor01Crawls_URL_CURRENT_STATUS_FINISHED    URLMonitor01Crawls_URLCurrentStatus = 5
	URLMonitor01Crawls_URL_CURRENT_STATUS_CANCELED    URLMonitor01Crawls_URLCurrentStatus = 6
)

// Enum value maps for URLMonitor01Crawls_URLCurrentStatus.
var (
	URLMonitor01Crawls_URLCurrentStatus_name = map[int32]string{
		0: "URL_CURRENT_STATUS_UNSPECIFIED",
		1: "URL_CURRENT_STATUS_NO_RECORD",
		2: "URL_CURRENT_STATUS_PENDING",
		3: "URL_CURRENT_STATUS_START",
		4: "URL_CURRENT_STATUS_IN_PROGRESS",
		5: "URL_CURRENT_STATUS_FINISHED",
		6: "URL_CURRENT_STATUS_CANCELED",
	}
	URLMonitor01Crawls_URLCurrentStatus_value = map[string]int32{
		"URL_CURRENT_STATUS_UNSPECIFIED": 0,
		"URL_CURRENT_STATUS_NO_RECORD":   1,
		"URL_CURRENT_STATUS_PENDING":     2,
		"URL_CURRENT_STATUS_START":       3,
		"URL_CURRENT_STATUS_IN_PROGRESS": 4,
		"URL_CURRENT_STATUS_FINISHED":    5,
		"URL_CURRENT_STATUS_CANCELED":    6,
	}
)

func (x URLMonitor01Crawls_URLCurrentStatus) Enum() *URLMonitor01Crawls_URLCurrentStatus {
	p := new(URLMonitor01Crawls_URLCurrentStatus)
	*p = x
	return p
}

func (x URLMonitor01Crawls_URLCurrentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URLMonitor01Crawls_URLCurrentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_crawler_v1_crawl_proto_enumTypes[3].Descriptor()
}

func (URLMonitor01Crawls_URLCurrentStatus) Type() protoreflect.EnumType {
	return &file_crawler_v1_crawl_proto_enumTypes[3]
}

func (x URLMonitor01Crawls_URLCurrentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URLMonitor01Crawls_URLCurrentStatus.Descriptor instead.
func (URLMonitor01Crawls_URLCurrentStatus) EnumDescriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{19, 0}
}

type AddCrawlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootUrl string `protobuf:"bytes,1,opt,name=root_url,json=rootUrl,proto3" json:"root_url,omitempty"`
}

func (x *AddCrawlRequest) Reset() {
	*x = AddCrawlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCrawlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCrawlRequest) ProtoMessage() {}

func (x *AddCrawlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCrawlRequest.ProtoReflect.Descriptor instead.
func (*AddCrawlRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{0}
}

func (x *AddCrawlRequest) GetRootUrl() string {
	if x != nil {
		return x.RootUrl
	}
	return ""
}

type AddCrawlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddCrawlResponse) Reset() {
	*x = AddCrawlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCrawlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCrawlResponse) ProtoMessage() {}

func (x *AddCrawlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCrawlResponse.ProtoReflect.Descriptor instead.
func (*AddCrawlResponse) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{1}
}

func (x *AddCrawlResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartCrawlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M1 string `protobuf:"bytes,1,opt,name=m1,proto3" json:"m1,omitempty"`
}

func (x *StartCrawlRequest) Reset() {
	*x = StartCrawlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartCrawlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCrawlRequest) ProtoMessage() {}

func (x *StartCrawlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCrawlRequest.ProtoReflect.Descriptor instead.
func (*StartCrawlRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{2}
}

func (x *StartCrawlRequest) GetM1() string {
	if x != nil {
		return x.M1
	}
	return ""
}

type StartCrawlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StartCrawlResponse) Reset() {
	*x = StartCrawlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartCrawlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartCrawlResponse) ProtoMessage() {}

func (x *StartCrawlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartCrawlResponse.ProtoReflect.Descriptor instead.
func (*StartCrawlResponse) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{3}
}

func (x *StartCrawlResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopCrawlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M1 string `protobuf:"bytes,1,opt,name=m1,proto3" json:"m1,omitempty"`
}

func (x *StopCrawlRequest) Reset() {
	*x = StopCrawlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCrawlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCrawlRequest) ProtoMessage() {}

func (x *StopCrawlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCrawlRequest.ProtoReflect.Descriptor instead.
func (*StopCrawlRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{4}
}

func (x *StopCrawlRequest) GetM1() string {
	if x != nil {
		return x.M1
	}
	return ""
}

type StopCrawlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StopCrawlResponse) Reset() {
	*x = StopCrawlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopCrawlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopCrawlResponse) ProtoMessage() {}

func (x *StopCrawlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopCrawlResponse.ProtoReflect.Descriptor instead.
func (*StopCrawlResponse) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{5}
}

func (x *StopCrawlResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CancelCrawlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootUrl string `protobuf:"bytes,1,opt,name=root_url,json=rootUrl,proto3" json:"root_url,omitempty"` // give a short name for task to cancel crawl
}

func (x *CancelCrawlRequest) Reset() {
	*x = CancelCrawlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCrawlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCrawlRequest) ProtoMessage() {}

func (x *CancelCrawlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCrawlRequest.ProtoReflect.Descriptor instead.
func (*CancelCrawlRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{6}
}

func (x *CancelCrawlRequest) GetRootUrl() string {
	if x != nil {
		return x.RootUrl
	}
	return ""
}

type CancelCrawlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CancelCrawlResponse) Reset() {
	*x = CancelCrawlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelCrawlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelCrawlResponse) ProtoMessage() {}

func (x *CancelCrawlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelCrawlResponse.ProtoReflect.Descriptor instead.
func (*CancelCrawlResponse) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{7}
}

func (x *CancelCrawlResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// -----------------------
type ListCrawlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCrawlRequest) Reset() {
	*x = ListCrawlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCrawlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCrawlRequest) ProtoMessage() {}

func (x *ListCrawlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCrawlRequest.ProtoReflect.Descriptor instead.
func (*ListCrawlRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{8}
}

type ListCrawlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string root_url = 1;
	UrlCrawled []*URLCurrentCrawls `protobuf:"bytes,1,rep,name=url_crawled,json=urlCrawled,proto3" json:"url_crawled,omitempty"`
}

func (x *ListCrawlResponse) Reset() {
	*x = ListCrawlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCrawlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCrawlResponse) ProtoMessage() {}

func (x *ListCrawlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCrawlResponse.ProtoReflect.Descriptor instead.
func (*ListCrawlResponse) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{9}
}

func (x *ListCrawlResponse) GetUrlCrawled() []*URLCurrentCrawls {
	if x != nil {
		return x.UrlCrawled
	}
	return nil
}

type URLCurrentCrawls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlRoot   string                            `protobuf:"bytes,1,opt,name=url_root,json=urlRoot,proto3" json:"url_root,omitempty"`
	UrlStatus URLCurrentCrawls_URLCurrentStatus `protobuf:"varint,2,opt,name=url_status,json=urlStatus,proto3,enum=crawler.v1.URLCurrentCrawls_URLCurrentStatus" json:"url_status,omitempty"`
}

func (x *URLCurrentCrawls) Reset() {
	*x = URLCurrentCrawls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLCurrentCrawls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLCurrentCrawls) ProtoMessage() {}

func (x *URLCurrentCrawls) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLCurrentCrawls.ProtoReflect.Descriptor instead.
func (*URLCurrentCrawls) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{10}
}

func (x *URLCurrentCrawls) GetUrlRoot() string {
	if x != nil {
		return x.UrlRoot
	}
	return ""
}

func (x *URLCurrentCrawls) GetUrlStatus() URLCurrentCrawls_URLCurrentStatus {
	if x != nil {
		return x.UrlStatus
	}
	return URLCurrentCrawls_URL_CURRENT_STATUS_UNSPECIFIED
}

// -----------------------
type LongListCrawlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// optional string root_url = 1;
	RootUrl string `protobuf:"bytes,1,opt,name=root_url,json=rootUrl,proto3" json:"root_url,omitempty"`
}

func (x *LongListCrawlRequest) Reset() {
	*x = LongListCrawlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LongListCrawlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongListCrawlRequest) ProtoMessage() {}

func (x *LongListCrawlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LongListCrawlRequest.ProtoReflect.Descriptor instead.
func (*LongListCrawlRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{11}
}

func (x *LongListCrawlRequest) GetRootUrl() string {
	if x != nil {
		return x.RootUrl
	}
	return ""
}

type LongListCrawlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string root_url = 1;
	UrlCrawled []*URLLongListCurrentCrawls `protobuf:"bytes,1,rep,name=url_crawled,json=urlCrawled,proto3" json:"url_crawled,omitempty"`
}

func (x *LongListCrawlResponse) Reset() {
	*x = LongListCrawlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LongListCrawlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongListCrawlResponse) ProtoMessage() {}

func (x *LongListCrawlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LongListCrawlResponse.ProtoReflect.Descriptor instead.
func (*LongListCrawlResponse) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{12}
}

func (x *LongListCrawlResponse) GetUrlCrawled() []*URLLongListCurrentCrawls {
	if x != nil {
		return x.UrlCrawled
	}
	return nil
}

type URLLongListCurrentCrawls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlRoot    string                                    `protobuf:"bytes,1,opt,name=url_root,json=urlRoot,proto3" json:"url_root,omitempty"`
	UrlStatus  URLLongListCurrentCrawls_URLCurrentStatus `protobuf:"varint,2,opt,name=url_status,json=urlStatus,proto3,enum=crawler.v1.URLLongListCurrentCrawls_URLCurrentStatus" json:"url_status,omitempty"`
	UrlCrawled []string                                  `protobuf:"bytes,3,rep,name=url_crawled,json=urlCrawled,proto3" json:"url_crawled,omitempty"`
}

func (x *URLLongListCurrentCrawls) Reset() {
	*x = URLLongListCurrentCrawls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLongListCurrentCrawls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLongListCurrentCrawls) ProtoMessage() {}

func (x *URLLongListCurrentCrawls) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLongListCurrentCrawls.ProtoReflect.Descriptor instead.
func (*URLLongListCurrentCrawls) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{13}
}

func (x *URLLongListCurrentCrawls) GetUrlRoot() string {
	if x != nil {
		return x.UrlRoot
	}
	return ""
}

func (x *URLLongListCurrentCrawls) GetUrlStatus() URLLongListCurrentCrawls_URLCurrentStatus {
	if x != nil {
		return x.UrlStatus
	}
	return URLLongListCurrentCrawls_URL_CURRENT_STATUS_UNSPECIFIED
}

func (x *URLLongListCurrentCrawls) GetUrlCrawled() []string {
	if x != nil {
		return x.UrlCrawled
	}
	return nil
}

type MonitorCrawlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootUrl string `protobuf:"bytes,1,opt,name=root_url,json=rootUrl,proto3" json:"root_url,omitempty"`
}

func (x *MonitorCrawlRequest) Reset() {
	*x = MonitorCrawlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorCrawlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorCrawlRequest) ProtoMessage() {}

func (x *MonitorCrawlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorCrawlRequest.ProtoReflect.Descriptor instead.
func (*MonitorCrawlRequest) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{14}
}

func (x *MonitorCrawlRequest) GetRootUrl() string {
	if x != nil {
		return x.RootUrl
	}
	return ""
}

type MonitorCrawlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// repeated URLMonitorCrawls root_url = 1;
	RootUrl *URLMonitorCrawls `protobuf:"bytes,1,opt,name=root_url,json=rootUrl,proto3" json:"root_url,omitempty"`
}

func (x *MonitorCrawlResponse) Reset() {
	*x = MonitorCrawlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorCrawlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorCrawlResponse) ProtoMessage() {}

func (x *MonitorCrawlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorCrawlResponse.ProtoReflect.Descriptor instead.
func (*MonitorCrawlResponse) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{15}
}

func (x *MonitorCrawlResponse) GetRootUrl() *URLMonitorCrawls {
	if x != nil {
		return x.RootUrl
	}
	return nil
}

type URLMonitorCrawls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlRoot    string                            `protobuf:"bytes,1,opt,name=url_root,json=urlRoot,proto3" json:"url_root,omitempty"`
	UrlStatus  URLMonitorCrawls_URLCurrentStatus `protobuf:"varint,2,opt,name=url_status,json=urlStatus,proto3,enum=crawler.v1.URLMonitorCrawls_URLCurrentStatus" json:"url_status,omitempty"`
	UrlCrawled []string                          `protobuf:"bytes,3,rep,name=url_crawled,json=urlCrawled,proto3" json:"url_crawled,omitempty"`
}

func (x *URLMonitorCrawls) Reset() {
	*x = URLMonitorCrawls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLMonitorCrawls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLMonitorCrawls) ProtoMessage() {}

func (x *URLMonitorCrawls) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLMonitorCrawls.ProtoReflect.Descriptor instead.
func (*URLMonitorCrawls) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{16}
}

func (x *URLMonitorCrawls) GetUrlRoot() string {
	if x != nil {
		return x.UrlRoot
	}
	return ""
}

func (x *URLMonitorCrawls) GetUrlStatus() URLMonitorCrawls_URLCurrentStatus {
	if x != nil {
		return x.UrlStatus
	}
	return URLMonitorCrawls_URL_CURRENT_STATUS_UNSPECIFIED
}

func (x *URLMonitorCrawls) GetUrlCrawled() []string {
	if x != nil {
		return x.UrlCrawled
	}
	return nil
}

type MonitorCrawl01Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootUrl string `protobuf:"bytes,1,opt,name=root_url,json=rootUrl,proto3" json:"root_url,omitempty"`
}

func (x *MonitorCrawl01Request) Reset() {
	*x = MonitorCrawl01Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorCrawl01Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorCrawl01Request) ProtoMessage() {}

func (x *MonitorCrawl01Request) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorCrawl01Request.ProtoReflect.Descriptor instead.
func (*MonitorCrawl01Request) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{17}
}

func (x *MonitorCrawl01Request) GetRootUrl() string {
	if x != nil {
		return x.RootUrl
	}
	return ""
}

type MonitorCrawl01Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// repeated URLMonitorCrawls root_url = 1;
	RootUrl *URLMonitorCrawls `protobuf:"bytes,1,opt,name=root_url,json=rootUrl,proto3" json:"root_url,omitempty"`
}

func (x *MonitorCrawl01Response) Reset() {
	*x = MonitorCrawl01Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorCrawl01Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorCrawl01Response) ProtoMessage() {}

func (x *MonitorCrawl01Response) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorCrawl01Response.ProtoReflect.Descriptor instead.
func (*MonitorCrawl01Response) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{18}
}

func (x *MonitorCrawl01Response) GetRootUrl() *URLMonitorCrawls {
	if x != nil {
		return x.RootUrl
	}
	return nil
}

type URLMonitor01Crawls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UrlRoot    string                              `protobuf:"bytes,1,opt,name=url_root,json=urlRoot,proto3" json:"url_root,omitempty"`
	UrlStatus  URLMonitor01Crawls_URLCurrentStatus `protobuf:"varint,2,opt,name=url_status,json=urlStatus,proto3,enum=crawler.v1.URLMonitor01Crawls_URLCurrentStatus" json:"url_status,omitempty"`
	UrlCrawled []string                            `protobuf:"bytes,3,rep,name=url_crawled,json=urlCrawled,proto3" json:"url_crawled,omitempty"`
}

func (x *URLMonitor01Crawls) Reset() {
	*x = URLMonitor01Crawls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_v1_crawl_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLMonitor01Crawls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLMonitor01Crawls) ProtoMessage() {}

func (x *URLMonitor01Crawls) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_v1_crawl_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLMonitor01Crawls.ProtoReflect.Descriptor instead.
func (*URLMonitor01Crawls) Descriptor() ([]byte, []int) {
	return file_crawler_v1_crawl_proto_rawDescGZIP(), []int{19}
}

func (x *URLMonitor01Crawls) GetUrlRoot() string {
	if x != nil {
		return x.UrlRoot
	}
	return ""
}

func (x *URLMonitor01Crawls) GetUrlStatus() URLMonitor01Crawls_URLCurrentStatus {
	if x != nil {
		return x.UrlStatus
	}
	return URLMonitor01Crawls_URL_CURRENT_STATUS_UNSPECIFIED
}

func (x *URLMonitor01Crawls) GetUrlCrawled() []string {
	if x != nil {
		return x.UrlCrawled
	}
	return nil
}

var File_crawler_v1_crawl_proto protoreflect.FileDescriptor

var file_crawler_v1_crawl_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x22, 0x2c, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x55,
	0x72, 0x6c, 0x22, 0x2c, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x23, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x6d, 0x31, 0x22, 0x2e, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x72, 0x61,
	0x77, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6d, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x31, 0x22, 0x2d, 0x0a, 0x11, 0x53, 0x74, 0x6f,
	0x70, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x75, 0x72, 0x6c, 0x5f, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x52, 0x0a, 0x75, 0x72, 0x6c, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x64, 0x22, 0xfa, 0x02, 0x0a, 0x10, 0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x4c, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x73, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x75, 0x72, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xfc, 0x01, 0x0a, 0x10, 0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52,
	0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x52, 0x4c,
	0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x55,
	0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x55,
	0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x55, 0x52, 0x4c,
	0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x1f, 0x0a,
	0x1b, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1f,
	0x0a, 0x1b, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22,
	0x31, 0x0a, 0x14, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x55,
	0x72, 0x6c, 0x22, 0x5e, 0x0a, 0x15, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x75,
	0x72, 0x6c, 0x5f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x52,
	0x4c, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x52, 0x0a, 0x75, 0x72, 0x6c, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x64, 0x22, 0xab, 0x03, 0x0a, 0x18, 0x55, 0x52, 0x4c, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x54, 0x0a, 0x0a, 0x75, 0x72,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x52, 0x4c, 0x4c,
	0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x73, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x75, 0x72, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x72, 0x6c, 0x5f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x72, 0x6c, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x64, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55,
	0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x52,
	0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a,
	0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18,
	0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x55, 0x52,
	0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x1f,
	0x0a, 0x1b, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x1f, 0x0a, 0x1b, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x06,
	0x22, 0x30, 0x0a, 0x13, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x55,
	0x72, 0x6c, 0x22, 0x4f, 0x0a, 0x14, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x61,
	0x77, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x72, 0x6f,
	0x6f, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x52, 0x4c, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74,
	0x55, 0x72, 0x6c, 0x22, 0x9b, 0x03, 0x0a, 0x10, 0x55, 0x52, 0x4c, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x4c, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x52, 0x4c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43,
	0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x75, 0x72, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x72, 0x6c, 0x5f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x72, 0x6c, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x55, 0x52, 0x4c, 0x5f, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x55,
	0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a,
	0x1a, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1c, 0x0a,
	0x18, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x55,
	0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12,
	0x1f, 0x0a, 0x1b, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x05,
	0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10,
	0x06, 0x22, 0x32, 0x0a, 0x15, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x61, 0x77,
	0x6c, 0x30, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f,
	0x6f, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f,
	0x6f, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x51, 0x0a, 0x16, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x43, 0x72, 0x61, 0x77, 0x6c, 0x30, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x52, 0x4c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x52,
	0x07, 0x72, 0x6f, 0x6f, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x9f, 0x03, 0x0a, 0x12, 0x55, 0x52, 0x4c,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x30, 0x31, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x4e, 0x0a, 0x0a, 0x75, 0x72,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f,
	0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x52, 0x4c, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x30, 0x31, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x73, 0x2e, 0x55,
	0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x09, 0x75, 0x72, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x72,
	0x6c, 0x5f, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x72, 0x6c, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x10,
	0x55, 0x52, 0x4c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x1e, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45,
	0x43, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55,
	0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55,
	0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x55, 0x52, 0x4c, 0x5f, 0x43, 0x55, 0x52, 0x52,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x52, 0x4c, 0x5f,
	0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x52, 0x4c,
	0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x32, 0xb1, 0x03, 0x0a, 0x0e, 0x43,
	0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a,
	0x08, 0x41, 0x64, 0x64, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x12, 0x1b, 0x2e, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x12, 0x1c, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72,
	0x61, 0x77, 0x6c, 0x12, 0x20, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x12, 0x1f, 0x2e, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43,
	0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x5b, 0x0a, 0x0e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x61, 0x77,
	0x6c, 0x30, 0x31, 0x12, 0x21, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x30, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x30, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x21,
	0x5a, 0x1f, 0x77, 0x64, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crawler_v1_crawl_proto_rawDescOnce sync.Once
	file_crawler_v1_crawl_proto_rawDescData = file_crawler_v1_crawl_proto_rawDesc
)

func file_crawler_v1_crawl_proto_rawDescGZIP() []byte {
	file_crawler_v1_crawl_proto_rawDescOnce.Do(func() {
		file_crawler_v1_crawl_proto_rawDescData = protoimpl.X.CompressGZIP(file_crawler_v1_crawl_proto_rawDescData)
	})
	return file_crawler_v1_crawl_proto_rawDescData
}

var file_crawler_v1_crawl_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_crawler_v1_crawl_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_crawler_v1_crawl_proto_goTypes = []interface{}{
	(URLCurrentCrawls_URLCurrentStatus)(0),         // 0: crawler.v1.URLCurrentCrawls.URLCurrentStatus
	(URLLongListCurrentCrawls_URLCurrentStatus)(0), // 1: crawler.v1.URLLongListCurrentCrawls.URLCurrentStatus
	(URLMonitorCrawls_URLCurrentStatus)(0),         // 2: crawler.v1.URLMonitorCrawls.URLCurrentStatus
	(URLMonitor01Crawls_URLCurrentStatus)(0),       // 3: crawler.v1.URLMonitor01Crawls.URLCurrentStatus
	(*AddCrawlRequest)(nil),                        // 4: crawler.v1.AddCrawlRequest
	(*AddCrawlResponse)(nil),                       // 5: crawler.v1.AddCrawlResponse
	(*StartCrawlRequest)(nil),                      // 6: crawler.v1.StartCrawlRequest
	(*StartCrawlResponse)(nil),                     // 7: crawler.v1.StartCrawlResponse
	(*StopCrawlRequest)(nil),                       // 8: crawler.v1.StopCrawlRequest
	(*StopCrawlResponse)(nil),                      // 9: crawler.v1.StopCrawlResponse
	(*CancelCrawlRequest)(nil),                     // 10: crawler.v1.CancelCrawlRequest
	(*CancelCrawlResponse)(nil),                    // 11: crawler.v1.CancelCrawlResponse
	(*ListCrawlRequest)(nil),                       // 12: crawler.v1.ListCrawlRequest
	(*ListCrawlResponse)(nil),                      // 13: crawler.v1.ListCrawlResponse
	(*URLCurrentCrawls)(nil),                       // 14: crawler.v1.URLCurrentCrawls
	(*LongListCrawlRequest)(nil),                   // 15: crawler.v1.LongListCrawlRequest
	(*LongListCrawlResponse)(nil),                  // 16: crawler.v1.LongListCrawlResponse
	(*URLLongListCurrentCrawls)(nil),               // 17: crawler.v1.URLLongListCurrentCrawls
	(*MonitorCrawlRequest)(nil),                    // 18: crawler.v1.MonitorCrawlRequest
	(*MonitorCrawlResponse)(nil),                   // 19: crawler.v1.MonitorCrawlResponse
	(*URLMonitorCrawls)(nil),                       // 20: crawler.v1.URLMonitorCrawls
	(*MonitorCrawl01Request)(nil),                  // 21: crawler.v1.MonitorCrawl01Request
	(*MonitorCrawl01Response)(nil),                 // 22: crawler.v1.MonitorCrawl01Response
	(*URLMonitor01Crawls)(nil),                     // 23: crawler.v1.URLMonitor01Crawls
}
var file_crawler_v1_crawl_proto_depIdxs = []int32{
	14, // 0: crawler.v1.ListCrawlResponse.url_crawled:type_name -> crawler.v1.URLCurrentCrawls
	0,  // 1: crawler.v1.URLCurrentCrawls.url_status:type_name -> crawler.v1.URLCurrentCrawls.URLCurrentStatus
	17, // 2: crawler.v1.LongListCrawlResponse.url_crawled:type_name -> crawler.v1.URLLongListCurrentCrawls
	1,  // 3: crawler.v1.URLLongListCurrentCrawls.url_status:type_name -> crawler.v1.URLLongListCurrentCrawls.URLCurrentStatus
	20, // 4: crawler.v1.MonitorCrawlResponse.root_url:type_name -> crawler.v1.URLMonitorCrawls
	2,  // 5: crawler.v1.URLMonitorCrawls.url_status:type_name -> crawler.v1.URLMonitorCrawls.URLCurrentStatus
	20, // 6: crawler.v1.MonitorCrawl01Response.root_url:type_name -> crawler.v1.URLMonitorCrawls
	3,  // 7: crawler.v1.URLMonitor01Crawls.url_status:type_name -> crawler.v1.URLMonitor01Crawls.URLCurrentStatus
	4,  // 8: crawler.v1.CrawlerService.AddCrawl:input_type -> crawler.v1.AddCrawlRequest
	12, // 9: crawler.v1.CrawlerService.ListCrawl:input_type -> crawler.v1.ListCrawlRequest
	15, // 10: crawler.v1.CrawlerService.LongListCrawl:input_type -> crawler.v1.LongListCrawlRequest
	18, // 11: crawler.v1.CrawlerService.MonitorCrawl:input_type -> crawler.v1.MonitorCrawlRequest
	21, // 12: crawler.v1.CrawlerService.MonitorCrawl01:input_type -> crawler.v1.MonitorCrawl01Request
	5,  // 13: crawler.v1.CrawlerService.AddCrawl:output_type -> crawler.v1.AddCrawlResponse
	13, // 14: crawler.v1.CrawlerService.ListCrawl:output_type -> crawler.v1.ListCrawlResponse
	16, // 15: crawler.v1.CrawlerService.LongListCrawl:output_type -> crawler.v1.LongListCrawlResponse
	19, // 16: crawler.v1.CrawlerService.MonitorCrawl:output_type -> crawler.v1.MonitorCrawlResponse
	22, // 17: crawler.v1.CrawlerService.MonitorCrawl01:output_type -> crawler.v1.MonitorCrawl01Response
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_crawler_v1_crawl_proto_init() }
func file_crawler_v1_crawl_proto_init() {
	if File_crawler_v1_crawl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crawler_v1_crawl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCrawlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCrawlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartCrawlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartCrawlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCrawlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopCrawlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCrawlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelCrawlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCrawlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCrawlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLCurrentCrawls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LongListCrawlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LongListCrawlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLongListCurrentCrawls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorCrawlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorCrawlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLMonitorCrawls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorCrawl01Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorCrawl01Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_v1_crawl_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLMonitor01Crawls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crawler_v1_crawl_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crawler_v1_crawl_proto_goTypes,
		DependencyIndexes: file_crawler_v1_crawl_proto_depIdxs,
		EnumInfos:         file_crawler_v1_crawl_proto_enumTypes,
		MessageInfos:      file_crawler_v1_crawl_proto_msgTypes,
	}.Build()
	File_crawler_v1_crawl_proto = out.File
	file_crawler_v1_crawl_proto_rawDesc = nil
	file_crawler_v1_crawl_proto_goTypes = nil
	file_crawler_v1_crawl_proto_depIdxs = nil
}
